name: Release

on:
  workflow_dispatch:
  release:
    types: [ published ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for hatch-vcs to generate full version
          fetch-tags: true

      - name: Set up Python Env
        uses: ./.github/actions/setup-python-env

      - name: Run version checks
        run: make check-version

      - name: Build library source and wheel artifacts
        uses: ansys/actions/build-library@v10
        with:
          library-name: ${{ env.PACKAGE_NAME }}
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

      - name: "Upload artifacts to PyPI using trusted publisher"
        uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc # v1.12.4
        with:
          repository-url: "https://upload.pypi.org/legacy/"
          print-hash: true
          packages-dir: ${{ env.PACKAGE_NAME }}-artifacts
          skip-existing: false

  build-release-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python Env
        uses: ./.github/actions/setup-python-env

      - name: Run Ansys documentation building action
        uses: ansys/actions/doc-build@v10
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
          check-links: false
          sphinxopts: '-j auto'

  upload-release-docs:
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    needs: [ build-release-docs, release ]
    steps:
      - name: Set up Python Env
        uses: ./.github/actions/setup-python-env

      - name: Deploy the stable documentation
        uses: ansys/actions/doc-deploy-stable@v10
        if: ${{ !env.ACT }}
        with:
          cname: ${{ env.DOCUMENTATION_CNAME }}
          token: ${{ secrets.GITHUB_TOKEN }}
          bot-user: ${{ secrets.PYANSYS_CI_BOT_USERNAME }}
          bot-email: ${{ secrets.PYANSYS_CI_BOT_EMAIL }}

  notify-release-failure:
    if: failure()
    needs: [ release, build-release-docs, upload-release-docs ]
    runs-on: ubuntu-latest
    steps:
      - name: Microsoft Teams Notification
        uses: jdcargile/ms-teams-notification@v1.4
        with:
          github-token: ${{ github.token }}
          ms-teams-webhook-uri: ${{ secrets.MS_TEAMS_WEBHOOK_URI_CI }}
          notification-summary: "‚ùå Release workflow failed in `${{ github.workflow }}` on `${{ github.ref_name }}`"
          notification-color: dc3545
          timezone: America/New_York
